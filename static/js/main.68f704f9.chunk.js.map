{"version":3,"sources":["Images/lone.png","Images/logotiffany.png","Images/ena.jpg","Images/Asset 1.png","Images/logoblack.png","firebase.js","components/Navbar.js","components/Product.js","components/Footer.js","components/ProductPopup.js","components/ContactPage.js","components/AboutPage.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","Navbar","_ref","setPopupOpen","productCount","setProductCount","useState","isMenuOpen","setIsMenuOpen","menuRef","useRef","navbarRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","async","orderCount","getDocs","collection","size","error","console","fetchOrders","React","createElement","className","role","ref","Link","to","src","logo","alt","onClick","toggleMenu","prev","aria-label","aria-expanded","aria-controls","Product","count","setCount","digits","setDigits","toString","split","map","Number","isExpanded","setIsExpanded","calculatedFinalCount","currentCount","countdownInterval","setInterval","clearInterval","digit","key","image","logoblack","Footer","href","rel","FontAwesomeIcon","icon","faTiktok","faInstagram","customSelectStyles","control","provided","width","height","margin","padding","fontFamily","fontSize","color","background","border","borderRadius","outline","transition","boxShadow","&:focus","borderColor","&:hover","option","state","isSelected","backgroundColor","singleValue","placeholder","textAlign","menu","zIndex","menuList","maxHeight","overflowY","ProductPopup","forwardRef","isOpen","popupRef","formData","setFormData","firstName","lastName","phone","email","country","city","zipCode","address","product","subtotal","shipping","total","invoiceDate","Date","toLocaleDateString","productImg","countryData","setCountryData","stateData","setStateData","loading","setLoading","setError","showConfirmation","setShowConfirmation","log","response","fetch","headers","X-CSCAPI-KEY","status","ok","Error","data","json","message","fetchCountries","fetchStates","handleChange","e","name","value","prevData","[object Object]","useCallback","timer","setTimeout","clearTimeout","Fragment","lone","onSubmit","preventDefault","test","validateEmail","querySnapshot","docs","some","doc","window","location","reload","oldOrderCount","formSubmitted","addDoc","checkIfFormSubmitted","reset","htmlFor","id","type","onChange","required","maxLength","pattern","Select","options","label","selectedOption","styles","iso2","disabled","ContactPage","honeypot","rating","popup","setPopup","visible","isSubmitting","setIsSubmitting","emailjs","sendForm","then","result","text","catch","finally","style","display","onRating","Array","_","i","starValue","rate","FaPhone","FaEnvelope","AboutPage","team","App","animateOnLoad","setAnimateOnLoad","isLoading","setIsLoading","sessionStorage","getItem","setItem","Router","Routes","Route","path","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.68f704f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lone.2600a8b7.png\";","module.exports = __webpack_public_path__ + \"static/media/logotiffany.37bf96cd.png\";","module.exports = __webpack_public_path__ + \"static/media/ena.9f09c4d7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Asset 1.05e47396.png\";","module.exports = __webpack_public_path__ + \"static/media/logoblack.c7522c9f.png\";","import { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration using environment variables\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize Firestore\r\nconst db = getFirestore(app);\r\n\r\n// Export the Firestore database\r\nexport { db };\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport './Navbar.css';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../Images/logotiffany.png';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\nconst Navbar = ({ setPopupOpen }) => {\r\n  const [productCount, setProductCount] = useState(45);\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const menuRef = useRef(null);\r\n  const navbarRef = useRef(null); // Ref for the navbar\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(prev => !prev); // Toggle menu state\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setIsMenuOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      // Check if the click is outside the menu and the navbar\r\n      if (\r\n        menuRef.current && !menuRef.current.contains(event.target) &&\r\n        navbarRef.current && !navbarRef.current.contains(event.target) &&\r\n        isMenuOpen\r\n      ) {\r\n        closeMenu(); // Close the menu if clicked outside\r\n      }\r\n    };\r\n\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [isMenuOpen]);\r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, 'orders'));\r\n        const orderCount = querySnapshot.size;\r\n        setProductCount(45 - orderCount);\r\n      } catch (error) {\r\n        console.error('Error fetching orders: ', error);\r\n      }\r\n    };\r\n\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  return (\r\n    <nav className=\"navbar\" role=\"navigation\" ref={navbarRef}> {/* Add ref here */}\r\n      <div className=\"navbar-content\">\r\n        <ul className=\"nav-links\">\r\n          <li><Link to=\"/\">Home</Link></li>\r\n          <li><Link to=\"/about\">About Us</Link></li>\r\n          <li><Link to=\"/contact\">Contact</Link></li>\r\n        </ul>\r\n        <Link to=\"/\" className=\"logo\">\r\n          <img src={logo} alt=\"Logo\" />\r\n        </Link>\r\n        {productCount > 0 ? (\r\n          <button className=\"order-now\" onClick={() => setPopupOpen(true)}>\r\n            ORDER NOW\r\n          </button>\r\n        ) : (\r\n          <div className=\"out-of-stock\"></div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"navwhendrop\">\r\n        <Link to=\"/\" className=\"logo_resp\">\r\n          <img src={logo} alt=\"Logo\" />\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggle\"\r\n          onClick={toggleMenu} // Toggle menu state\r\n          aria-label=\"Toggle menu\"\r\n          aria-expanded={isMenuOpen}\r\n          aria-controls=\"menu\"\r\n        >\r\n          {isMenuOpen ? '✖' : '☰'}\r\n        </button>\r\n        {isMenuOpen && ( // Render the menu conditionally based on isMenuOpen\r\n          <div className=\"menu open\" ref={menuRef}>\r\n            <ul className=\"nav-links\">\r\n              <li><Link to=\"/\">Home</Link></li>\r\n              <li><Link to=\"/about\">About Us</Link></li>\r\n              <li><Link to=\"/contact\">Contact</Link></li>\r\n            </ul>\r\n            {productCount > 0 ? (\r\n              <button className=\"order-now\" onClick={() => setPopupOpen(true)}>\r\n                ORDER NOW\r\n              </button>\r\n            ) : (\r\n              <div className=\"out-of-stock\"></div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Product.css';\r\nimport image from '../Images/Asset 1.png';\r\nimport logoblack from '../Images/logoblack.png';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { db } from '../firebase'; \r\n\r\nconst Product = ({ setPopupOpen }) => {\r\n  const initialCount = 45; \r\n  const [count, setCount] = useState(initialCount);\r\n  const [digits, setDigits] = useState(initialCount.toString().split('').map(Number));\r\n  const [isExpanded, setIsExpanded] = useState(false); \r\n\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, 'orders')); \r\n        const orderCount = querySnapshot.size;\r\n        const calculatedFinalCount = initialCount - orderCount;\r\n        // Start the countdown\r\n        let currentCount = initialCount;\r\n        const countdownInterval = setInterval(() => {\r\n          if (currentCount > calculatedFinalCount) {\r\n            currentCount -= 1;\r\n            setCount(currentCount);\r\n            setDigits(currentCount.toString().split('').map(Number));\r\n          } else {\r\n            clearInterval(countdownInterval); // Stop the countdown when target is reached\r\n          }\r\n        }, 200); // Adjust the speed of the countdown (100ms)\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching orders: ', error);\r\n      }\r\n    };\r\n\r\n    fetchOrders();\r\n  }, [initialCount]);\r\n  return (\r\n    <div className={`product-showcase ${isExpanded ? 'expanded' : ''}`}>\r\n      <div className={`section1 ${isExpanded ? 'expanded' : ''}`}>\r\n        <h2 className=\"title\">AN INHERITED STORY</h2>\r\n        <h3 className=\"subtitle\">FIRST RELEASE | LIMITED EDITION</h3>\r\n        <div className=\"product-count\">\r\n        <span className=\"count\">\r\n            {digits.map((digit) => (\r\n              <span className=\"digit leBlurIn\" key={`${digit}`}>\r\n                {digit}\r\n              </span>\r\n            ))}\r\n          </span>\r\n          <span className=\"label\">PRODUCTS LEFT</span>\r\n        </div>\r\n        {count > 0 ? (\r\n          <button className=\"order-now-large\" onClick={() => setPopupOpen(true)}>\r\n            ORDER NOW\r\n          </button>\r\n        ) : (\r\n          <div className=\"out-of-stock\">OUT OF STOCK</div>\r\n        )}\r\n      </div>\r\n      <div className={`section2 ${isExpanded ? 'expanded' : ''}`}>\r\n        <img src={image} alt=\"Product\" className={`product-image ${isExpanded ? 'expanded' : ''}`} />\r\n        <button className={`explore-btn ${isExpanded ? 'btn-explore-x' : ''}`} onClick={() => setIsExpanded(!isExpanded)}>\r\n          {isExpanded ? <div className=\"btn-explore-x\">✖</div> : 'Explore'}\r\n        </button>\r\n      </div>\r\n      <div className={`section3 ${isExpanded ? 'expanded' : ''}`}>\r\n          <div className=\"container\">\r\n            <div className=\"header\">\r\n              <h1>\r\n                45 MINUTES\r\n                <span>QUARTER-ZIP</span>\r\n              </h1>\r\n              <p className=\"product-info\">ASHE’s first product</p>\r\n            </div>\r\n            <div className=\"content\">\r\n              <h2>Composition</h2>\r\n              <p>Fabric: 100% cotton</p>\r\n              <h2>Care Instructions</h2>\r\n              <div className=\"care-instructions\">\r\n                <p><i className=\"fas fa-tshirt\"></i> Machine washable at max. 30°C</p>\r\n                <p><i className=\"fas fa-ban\"></i> Bleach prohibited</p>\r\n                <p><i className=\"fas fa-iron\"></i> Iron at max. 110°C</p>\r\n                <p><i className=\"fas fa-times-circle\"></i> Do not dry clean</p>\r\n                <p><i className=\"fas fa-times-circle\"></i> Do not tumble dry</p>\r\n                <p><i className=\"fas fa-exclamation-circle\"></i> Wash separately</p>\r\n              </div>\r\n              <h2>Traceability</h2>\r\n              <p>MADE IN TUNISIA.</p>\r\n              <p>This item is handmade by the tailor Hayet Collection.</p>\r\n              <div className='packaging'>\r\n              <h2>Packaging</h2>\r\n              <p>We are rethinking our packaging to reduce the consumption of raw materials, increase recycled content, and unify materials to facilitate their subsequent reuse and recycling.</p>\r\n              <p>All our bags, pouches, and boxes are 100% recyclable.</p>\r\n            </div></div>\r\n            <div className=\"footerInf\">\r\n            <img src={logoblack} alt=\"Logo\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","//footer.js\r\n\r\n\r\nimport React from 'react';\r\nimport './Footer.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTiktok, faInstagram } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Footer = () => {\r\n  \r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"social-links\">\r\n        <a href=\"https://www.tiktok.com/@ashe.tn\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <FontAwesomeIcon icon={faTiktok}  />\r\n        </a>\r\n        <a href=\"https://instagram.com/ashe.tn\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <FontAwesomeIcon icon={faInstagram}  />\r\n        </a>\r\n      </div>\r\n      <p className='midText'>BE PART OF THE JOURNEY</p>\r\n      <p className='be'>#be_distinct</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport Select from 'react-select';\r\nimport lone from '../Images/lone.png';\r\nimport { addDoc, collection, getDocs } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\nimport './ProductPopup.css';\r\n\r\n// Custom Select Styles\r\nconst customSelectStyles = {\r\n  control: (provided) => ({\r\n    ...provided,\r\n    width: '100%',\r\n    height: 'fit-content',\r\n    margin: '5px 0',\r\n    padding: '10px',\r\n    fontFamily: \"'Montserrat', sans-serif\",\r\n    fontSize: '1.8vh',\r\n    color: '#f7f7f7',\r\n    background: 'rgba(255, 255, 255, 0.1)',\r\n    border: '1px solid #e0e0e0',\r\n    borderRadius: '4px',\r\n    outline: 'none',\r\n    transition: 'border-color 0.3s ease, background 0.3s ease',\r\n    boxShadow: 'none',\r\n    '&:focus': {\r\n      borderColor: '#0abab5',\r\n      background: 'rgba(255, 255, 255, 0.2)',\r\n    },\r\n    '&:hover': {\r\n      borderColor: '#0abab5',\r\n      background: 'rgba(255, 255, 255, 0.2)',\r\n    },\r\n  }),\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    fontFamily: \"'Montserrat', sans-serif\",\r\n    fontSize: '1.8vh',\r\n    color: state.isSelected ? '#ffffff' : '#000000',\r\n    backgroundColor: state.isSelected ? '#0abab5' : 'rgba(255, 255, 255, 0.1)',\r\n    '&:hover': {\r\n      backgroundColor: '#0abab5',\r\n      color: 'white',\r\n    },\r\n  }),\r\n  singleValue: (provided) => ({\r\n    ...provided,\r\n    color: '#000000',\r\n    fontFamily: \"'Montserrat', sans-serif\",\r\n    fontSize: '1.8vh',\r\n  }),\r\n  placeholder: (provided) => ({\r\n    ...provided,\r\n    color: 'rgba(77, 77, 77, 0.514)',\r\n    fontFamily: \"'Montserrat', sans-serif\",\r\n    fontSize: '1.8vh',\r\n    textAlign: 'left',\r\n  }),\r\n  menu: (provided) => ({\r\n    ...provided,\r\n    zIndex: 9999,\r\n    backgroundColor: 'rgba(255, 255, 255)',\r\n    borderRadius: '4px',\r\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n  }),\r\n  menuList: (provided) => ({\r\n    ...provided,\r\n    maxHeight: '200px',\r\n    overflowY: 'auto',\r\n  }),\r\n};\r\n\r\nconst ProductPopup = React.forwardRef(({\r\n  isOpen,\r\n  setPopupOpen,\r\n}, ref) => {\r\n  const popupRef = useRef(null);\r\n\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    phone: '',\r\n    email: '',\r\n    country: '',\r\n    state: '',\r\n    city: '',\r\n    zipCode: '',\r\n    address: '',\r\n    size: '',\r\n    product: process.env.REACT_APP_PRODUCT,\r\n    subtotal: process.env.REACT_APP_SUBTOTAL,\r\n    shipping: process.env.REACT_APP_SHIPPING,\r\n    total: process.env.REACT_APP_TOTAL,\r\n    invoiceDate: new Date().toLocaleDateString(), // Formats the date as MM/DD/YYYY\r\n    productImg: '-'\r\n  });\r\n\r\n  const [countryData, setCountryData] = useState([]);\r\n  const [stateData, setStateData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      setLoading(true);\r\n      console.log('Fetching countries...');\r\n      try {\r\n        const response = await fetch('https://api.countrystatecity.in/v1/countries', {\r\n          headers: {\r\n'X-CSCAPI-KEY': process.env.REACT_APP_API_KEY,          },\r\n        });\r\n        console.log('Response status:', response.status); // Log the response status\r\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\r\n        const data = await response.json();\r\n        console.log('Fetched countries:', data); // Log the fetched data\r\n        setCountryData(data);\r\n      } catch (error) {\r\n        console.error('Error fetching countries:', error); // Log the error\r\n        setError('Failed to load countries: ' + error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  // Fetch states when the selected country changes\r\n  useEffect(() => {\r\n    const fetchStates = async () => {\r\n      if (!formData.country) return; // Skip fetching if no country is selected\r\n      \r\n      setLoading(true);\r\n      setError(''); // Reset error message before fetch\r\n      try {\r\n        const response = await fetch(`https://api.countrystatecity.in/v1/countries/${formData.country}/states`, {\r\n          headers: {\r\n'X-CSCAPI-KEY': process.env.REACT_APP_API_KEY, // Replace with your actual API key\r\n          },\r\n        });\r\n        \r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch states');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        setStateData(data);\r\n        setFormData(prev => ({ ...prev, state: '', city: '' })); // Reset state and city on country change\r\n      } catch (error) {\r\n        setError(error.message || 'Failed to load states');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchStates();\r\n  }, [formData.country]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleCountryInputChange = (selectedOption) => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      country: selectedOption.value, // Set country to selected country's ISO2 value\r\n      state: '', // Clear the state field\r\n      city: '',  // Clear the city field\r\n    }));\r\n  };\r\n\r\n  const handleStateInputChange = (selectedOption) => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      state: selectedOption.label, // Set state to selected state's name\r\n      city: '',  // Clear the city field\r\n    }));\r\n  };\r\n\r\n\r\n  const validateEmail = (email) => {\r\n    const re = /^[^\\s@]+@(gmail|yahoo|icloud|outlook|hotmail)\\.[^\\s@]+$/i;\r\n    return re.test(email);\r\n  };\r\n\r\n  const checkIfFormSubmitted = async (oldOrderCount, formData) => {\r\n    let formSubmitted = false;\r\n\r\n    try {\r\n      await addDoc(collection(db, 'orders'), formData);\r\n      const updatedSnapshot = await getDocs(collection(db, 'orders'));\r\n      const newOrderCount = updatedSnapshot.size;\r\n      formSubmitted = newOrderCount > oldOrderCount;\r\n    } catch (error) {\r\n      setError('Failed to submit your preorder! Please try again later.');\r\n      formSubmitted = false;\r\n    }\r\n\r\n    return formSubmitted;\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    setError(null);\r\n  \r\n    try {\r\n      // Validate email format\r\n      if (!validateEmail(formData.email)) {\r\n        setError('Invalid email format.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n  \r\n      // Check if the email already exists in the 'orders' collection\r\n      const querySnapshot = await getDocs(collection(db, 'orders'));\r\n      const emailExists = querySnapshot.docs.some(doc => doc.data().email === formData.email);\r\n  \r\n      if (emailExists) {\r\n        setError('You have already made an order.');\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n          setPopupOpen(false);\r\n        }, 2000);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n  \r\n      // Check if the form is submitted successfully (custom logic)\r\n      const oldOrderCount = querySnapshot.size;\r\n      const isFormSubmitted = await checkIfFormSubmitted(oldOrderCount, formData);\r\n  \r\n      if (isFormSubmitted) {\r\n            console.log('Email sent successfully!');\r\n            setShowConfirmation(true);\r\n            event.target.reset(); // Reset the form\r\n            setTimeout(() => {\r\n              window.location.reload();\r\n              setPopupOpen(false);\r\n            }, 2000);\r\n\r\n      } else {\r\n        setError('Failed to submit the order.');\r\n      }\r\n\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  \r\n  const handleClickOutside = useCallback((event) => {\r\n    if (popupRef.current && !popupRef.current.contains(event.target)) {\r\n      setPopupOpen(false);\r\n    }\r\n  }, [setPopupOpen]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n    }\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [isOpen, handleClickOutside]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      const timer = setTimeout(() => {\r\n        setError(null);\r\n      }, 2500);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [error]);\r\n\r\n  return (\r\n    isOpen && (\r\n      <>\r\n        <div className={`overlay ${isOpen ? 'active' : ''}`} />\r\n        <div className=\"popup\" role=\"dialog\" ref={popupRef}>\r\n          <div className=\"popup-inner\">\r\n            {/* Close Button */}\r\n            <button className=\"close-btn\" onClick={() => setPopupOpen(false)}>&times;</button>\r\n\r\n            {error ? (\r\n              <div className=\"error-popup\">\r\n                <img src={lone} alt=\"Ashe Logo\" className=\"lone\" />\r\n                <p>{error}</p>\r\n              </div>\r\n            ) : showConfirmation ? (\r\n              <div className=\"confirmation-message\">\r\n                <img src={lone} alt=\"Ashe Logo\" className=\"lone\" />\r\n                <p className=\"thank-you\">Thank you for your order.</p>\r\n                <p className=\"message-body\">\r\n                  An email has been sent to you. We appreciate your trust in Ashe.\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <form className=\"form\" onSubmit={onSubmit}>\r\n                <img src={lone} alt=\"Lone Logo\" className=\"lone\" />\r\n\r\n                <div className=\"grid-container\">\r\n\r\n                  {/* Customer Info Section */}\r\n                  <div className=\"customer-info\">\r\n                    <div className=\"titler\"><h2>Customer Informations</h2></div>\r\n                    <div className=\"grid-item\">\r\n                      <label htmlFor=\"firstName\">First Name</label>\r\n                      <input\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        type=\"text\"\r\n                        placeholder=\"First Name\"\r\n                        value={formData.firstName}\r\n                        onChange={handleChange}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"grid-item\">\r\n                      <label htmlFor=\"lastName\">Last Name</label>\r\n                      <input\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        type=\"text\"\r\n                        placeholder=\"Last Name\"\r\n                        value={formData.lastName}\r\n                        onChange={handleChange}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"grid-item\">\r\n                      <label htmlFor=\"phone\">Phone</label>\r\n                      <input\r\n                        id=\"phone\"\r\n                        name=\"phone\"\r\n                        type=\"tel\"\r\n                        placeholder=\"Phone\"\r\n                        maxLength=\"8\"\r\n                        pattern=\"[0-9]{8}\"\r\n                        value={formData.phone}\r\n                        onChange={handleChange}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"grid-item\">\r\n                      <label htmlFor=\"email\">Email</label>\r\n                      <input\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"grid-item-full\">\r\n                      <label htmlFor=\"size\">Size</label>\r\n                      <Select\r\n                        id=\"size\"\r\n                        name=\"size\"\r\n                        placeholder=\"Size\"\r\n                        options={[\r\n                          { value: 'S', label: 'S' },\r\n                          { value: 'M', label: 'M' },\r\n                          { value: 'L', label: 'L' },\r\n                          { value: 'XL', label: 'XL' },\r\n                        ]}\r\n                        value={formData.size ? { value: formData.size, label: formData.size } : null}\r\n                        onChange={(selectedOption) => handleChange({ target: { name: 'size', value: selectedOption.value } })}\r\n                        styles={customSelectStyles}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Billing Address Section */}\r\n                  <div className=\"billing-address\">\r\n                    <div className=\"titler\"><h2>Billing Address</h2></div>\r\n                    <div className=\"grid-item-full\">\r\n                      <label htmlFor=\"country\">Country</label>\r\n                      <Select\r\n                        id=\"country\"\r\n                        name=\"country\"\r\n                        placeholder=\"Select Country\"\r\n                        options={countryData.map(country => ({ value: country.iso2, label: country.name }))}\r\n                        onChange={handleCountryInputChange}\r\n                        styles={customSelectStyles}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"grid-item-full\">\r\n                      <label htmlFor=\"state\">State</label>\r\n                      <Select\r\n                        id=\"state\"\r\n                        name=\"state\"\r\n                        options={stateData.map(state => ({ value: state.iso2, label: state.name }))}\r\n                        placeholder=\"Select State\"\r\n                        onChange={handleStateInputChange}\r\n                        styles={customSelectStyles}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"grid-item\">\r\n        <label htmlFor=\"city\">City</label>\r\n        <input\r\n          id=\"city\"\r\n          name=\"city\"\r\n          type=\"text\"\r\n          placeholder=\"City\"\r\n          value={formData.city}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </div>\r\n                    <div className=\"grid-item\">\r\n                      <label htmlFor=\"zipCode\">Zip Code</label>\r\n                      <input\r\n                        id=\"zipCode\"\r\n                        name=\"zipCode\"\r\n                        type=\"text\"\r\n                        placeholder=\"ZIP Code\"\r\n                        value={formData.zipCode}\r\n                        onChange={handleChange}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"grid-item-full\">\r\n                      <label htmlFor=\"address\">Address</label>\r\n                      <input\r\n                        id=\"address\"\r\n                        name=\"address\"\r\n                        type=\"text\"\r\n                        placeholder=\"Address\"\r\n                        value={formData.address}\r\n                        onChange={handleChange}\r\n                        required\r\n                      />\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"grid-item\">\r\n                  <button className=\"submitBtn\" type=\"submit\" disabled={loading}>\r\n                    {loading ? <div className=\"loader\"></div> : 'Confirm'}\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  );\r\n});\r\n\r\nexport default ProductPopup;\r\n","import React, { useState } from 'react';\r\nimport emailjs from 'emailjs-com';\r\nimport './ContactPage.css';\r\nimport { FaPhone, FaEnvelope } from 'react-icons/fa'; // Import icons from react-icons\r\n\r\nconst ContactPage = () => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        message: '',\r\n        honeypot: '',\r\n        rating: 0, // Include rating in formData\r\n    });\r\n    const [popup, setPopup] = useState({ visible: false, message: '' });\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Check the honeypot field to prevent bot submissions\r\n        if (formData.honeypot) {\r\n            console.log('Honeypot field filled. Likely a bot submission.');\r\n            return;\r\n        }\r\n\r\n        setIsSubmitting(true); // Disable the button\r\n\r\n        emailjs.sendForm(\r\n            'service_734iuhd',   // Replace with your EmailJS service ID\r\n            'template_3ngxivs',  // Replace with your EmailJS template ID\r\n            e.target,\r\n            'yQXfcNM6YLXjklCsO'  // Replace with your Public Key\r\n        )\r\n        .then((result) => {\r\n            console.log('Email successfully sent!', result.text);\r\n            setPopup({ visible: true, message: \"Message sent successfully!\" });\r\n\r\n            // Reset the form data\r\n            setFormData({ name: '', email: '', message: '', honeypot: '', rating: 0 });\r\n\r\n            setTimeout(() => {\r\n                setPopup({ visible: false, message: '' });\r\n                window.location.reload(); // Refresh the page after 3 seconds\r\n            }, 3000); // Popup will disappear after 3 seconds\r\n        })\r\n        .catch((error) => {\r\n            console.log('Failed to send email.', error.text);\r\n            setPopup({ visible: true, message: \"Failed to send the message. Please try again later.\" });\r\n\r\n            setTimeout(() => {\r\n                setPopup({ visible: false, message: '' });\r\n                window.location.reload(); // Refresh the page after error message disappears\r\n            }, 3000); // Popup will disappear after 3 seconds\r\n        })\r\n        .finally(() => {\r\n            setIsSubmitting(false); // Re-enable the button\r\n        });\r\n    };\r\n\r\n    function StarRating({ rating, onRating }) {\r\n        return (\r\n            <div className=\"star-rating\">\r\n                {[...Array(5)].map((_, i) => {\r\n                    const starValue = i + 1; // Calculate the star value (1 to 5)\r\n                    return (\r\n                        <i\r\n                            key={i}\r\n                            className={`fa-star star ${starValue <= rating ? 'fas filled' : 'far empty'}`} // Combine classNames\r\n                            onClick={() => onRating(starValue === rating ? 0 : starValue)} // Reset to 0 if the clicked star is already selected\r\n                        ></i>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"contact-page\">\r\n            <form onSubmit={handleSubmit} className=\"contact-form\">\r\n                <div className=\"form-group\">\r\n                <h1>Contact Us</h1>\r\n\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        value={formData.name}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"message\">Message</label>\r\n                    <textarea\r\n                        id=\"message\"\r\n                        name=\"message\"\r\n                        value={formData.message}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n\r\n                <div style={{ display: 'none' }}>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"honeypot\" \r\n                        value={formData.honeypot} \r\n                        onChange={handleChange} \r\n                    />\r\n                </div>\r\n\r\n                {/* Add hidden input to pass the rating */}\r\n                <input \r\n                    type=\"hidden\" \r\n                    name=\"rating\" \r\n                    value={formData.rating} \r\n                />\r\n\r\n                <button type=\"submit\" className=\"submit-btn\" disabled={isSubmitting}>\r\n                    {isSubmitting ? <div className=\"loader\"></div>: 'Send Message'}\r\n                </button>\r\n            </form>\r\n\r\n            {popup.visible && (\r\n                <div className=\"popupContact\">\r\n                    <p>{popup.message}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* Rating Section */}\r\n            <div className='rate'>\r\n                <StarRating\r\n                    rating={formData.rating} // Use rating from formData\r\n                    onRating={(rate) => setFormData({ ...formData, rating: rate })} // Update rating in formData\r\n                />\r\n            </div>\r\n\r\n            {/* Contact Information Section */}\r\n            <div className=\"contact-info\">\r\n                <div className=\"contact-item\">\r\n                    <a href=\"tel:+21620986015\" className=\"contact-link\">\r\n                        <FaPhone className=\"contact-icon\" />\r\n                    </a>\r\n                </div>\r\n                <div className=\"contact-item\">\r\n                    <a href=\"mailto:contact.ashebrand@gmail.com\" className=\"contact-link\">\r\n                        <FaEnvelope className=\"contact-icon\" />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactPage;\r\n","import React from 'react';\r\nimport './AboutPage.css'; // Import the Swiss-style CSS file\r\nimport team from '../Images/ena.jpg';\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <div className=\"about-container\">\r\n      <h1 className=\"about-title\">About Us</h1>\r\n      <p className=\"about-description\">\r\n        Ashe is a brand that focuses on 'old money' clothing, inspired by inherited stories and timeless elegance. \r\n        We believe in the art of simplicity and sophistication, creating pieces that transcend trends.\r\n      </p>\r\n\r\n      <div className=\"team-section\">\r\n        <h2 className=\"team-title\">Meet the Team</h2>\r\n        <div className=\"team-cards\">\r\n          {/* First Team Member */}\r\n          <div className=\"team-member\">\r\n            <div className=\"card\">\r\n              <div className=\"card-inner\">\r\n                <div className=\"card-front swiss-front\">\r\n                  <h3>Omar Alibi</h3>\r\n                  <p>Founder & Creative Director</p>\r\n                </div>\r\n                <div className=\"card-back swiss-back\">\r\n                  <img src={team} alt=\"Omar Alibi\" />\r\n                  <p>Graphic Designer, Web Developer, Video Maker, Operator, Customer Support, Marketing Manager, Community Manager</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Second Team Member */}\r\n          <div className=\"team-member\">\r\n            <div className=\"card\">\r\n              <div className=\"card-inner\">\r\n                <div className=\"card-front swiss-front\">\r\n                  <h3>Omar Alibi</h3>\r\n                  <p>Marketing & Strategy</p>\r\n                </div>\r\n                <div className=\"card-back swiss-back\">\r\n                  <img src={team} alt=\"Omar Alibi\" />\r\n                  <p>Graphic Designer, Web Developer, Video Maker, Operator, Customer Support, Marketing Manager, Community Manager</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutPage;\r\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Product from './components/Product';\nimport Footer from './components/Footer';\nimport ProductPopup from './components/ProductPopup';\nimport ContactPage from './components/ContactPage';\nimport AboutPage from './components/AboutPage'; \nfunction App() {\n  const [isOpen, setPopupOpen] = useState(false);\n  const [animateOnLoad, setAnimateOnLoad] = useState(false); \n  const [isLoading, setIsLoading] = useState(true); \n  useEffect(() => {\n    const isFirstVisit = sessionStorage.getItem('firstVisit') === null;\n    if (isFirstVisit) {\n      sessionStorage.setItem('firstVisit', 'true');\n      setAnimateOnLoad(true);\n      const timer = setTimeout(() => {\n        setIsLoading(false);\n      }, 4000);\n      return () => clearTimeout(timer); \n    } else {\n      setIsLoading(false);\n    }\n  }, []); \n  return (\n    <Router>\n      {isLoading ? (\n        <div className={`loading-screen ${animateOnLoad ? 'blurIn' : ''}`}>\n          <h1>Welcome to Ashe</h1>\n        </div>\n      ) : (\n        <div className=\"App\">\n          <Navbar setPopupOpen={setPopupOpen} />\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <>\n                  <Product setPopupOpen={setPopupOpen} />\n                  <Footer />\n                </>\n              }\n            />\n            <Route \n              path=\"/contact\" \n              element={\n                <>\n                  <ContactPage />\n                  <Footer />\n                </>\n              } \n            />\n            <Route \n              path=\"/about\" \n              element={\n                <>\n                  <AboutPage />\n                  <Footer />\n                </>\n              } \n            />\n          </Routes>\n\n          {isOpen && (\n            <ProductPopup\n              isOpen={isOpen}\n              setPopupOpen={setPopupOpen}\n            />\n          )}\n        </div>\n      )}\n    </Router>\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '@fortawesome/fontawesome-svg-core/styles.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}